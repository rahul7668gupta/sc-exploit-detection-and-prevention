package main

import (
	"log"
	"os"

	"github.com/rahul7668gupta/sc-exploit/pkg/service"
)

func main() {

	clientURL := os.Getenv("ETHEREUM_CLIENT_URL")
	contractAddrAttack := os.Getenv("CONTRACT_ADDRESS_ATTACK")
	contractAddrVulnerableProxy := os.Getenv("CONTRACT_ADDRESS_VULNERABLE_PROXY")
	ownerAddr := os.Getenv("OWNER_ADDRESS")
	privateKey := os.Getenv("PRIVATE_KEY")
	dbConnString := os.Getenv("DB_CONN_STRING")

	if clientURL == "" || contractAddrAttack == "" || contractAddrVulnerableProxy == "" || ownerAddr == "" || privateKey == "" || dbConnString == "" {
		log.Fatalf("Please provide values for ETHEREUM_CLIENT_URL, CONTRACT_ADDRESS, OWNER_ADDRESS, PRIVATE_KEY, and DB_CONN_STRING")
	}

	pauser, err := service.NewContractPauser(clientURL, contractAddrAttack, contractAddrVulnerableProxy, ownerAddr, privateKey, dbConnString)
	if err != nil {
		log.Fatalf("Failed to create ContractPauser: %v", err)
	}

	// Run vulnerability analysis once on the contract
	// go func() {
	// pauser.RunVulnerabilityAnalysis()
	// }()

	pauser.MonitorPendingTransactions()
}
